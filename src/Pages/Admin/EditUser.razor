@page "/admin/edituser/{id:int}"
@using AutoMapper
@inject IAppUserService _appUserService
@inject NavigationManager NavManager
@inject IJSRuntime jsRuntime
@inject IMapper _mapper

<main class="mt-16 px-32 ">
    <p class="font-bold text-3xl text-gray-800 px-2 border-l-4 border-red-600 ">Kullanıcı Düzenle</p>
    <div class="mt-4">
        <EditForm Model="AppUser" OnValidSubmit="SaveUser" class="flex flex-col py-4">
            @if (AppUser != null)
            {
                <label class="pr-4 my-4 text-2xl">Kullanıcı Adı</label>
                <ValidationMessage For="@(() => AppUser.Username)" />
                <InputText @bind-Value="AppUser.Username" class="border p-4" placeholder="Kullanıcı Adı" />
                <label class="pr-4 my-4 text-2xl">Adı</label>
                <ValidationMessage For="@(() => AppUser.Username)" />
                <InputText @bind-Value="AppUser.FirstName" class="border p-4" placeholder="Adı" />
                <label class="pr-4 my-4 text-2xl">SoyAdı</label>
                <ValidationMessage For="@(() => AppUser.LastName)" />
                <InputText @bind-Value="AppUser.LastName" class="border p-4" placeholder="Soyadı" />
            }

            <button class="bg-gray-900 mt-4 w-32 p-4 text-white rounded" type="submit">Save</button>

        </EditForm>
    </div>

</main>

@code {
    [Parameter]
    public int Id { get; set; }

    public AppUserUpdateDto AppUser = new();

    protected async override Task OnInitializedAsync()
    {
        var response = await _appUserService.GetByFilterAsync(x => x.Id == Id);
        if(response.ResponseType == ResponseType.Success)
        {
            AppUser = _mapper.Map<AppUserUpdateDto>(response.Data);
            AppUser.Id = Id;
        }

    }


    public async Task SaveUser()
    {
        var result = await jsRuntime.InvokeAsync<bool>("confirm", "Değişiklikleri kaydetmek istiyor musunuz?");
        if (result)
        {
            dynamic response = await _appUserService.UpdateAsync(AppUser);
            if (response.ResponseType == ResponseType.Success)
            {
                NavManager.NavigateTo("/admin/users", true);
            }
        }

    }

}
